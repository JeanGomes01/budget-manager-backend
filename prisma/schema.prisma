// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  Client   Client[]
  Material Material[]
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  userId    Int
  createdAt DateTime @default(now())
  deleted   Boolean  @default(false)
  Budget    Budget[]
  user      User     @relation(fields: [userId], references: [id])
}

model Material {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  userId    Int
  value     Float
  createdAt DateTime @default(now())
  deleted   Boolean  @default(false)
  Budget    Budget?  @relation(fields: [budgetId], references: [id])
  budgetId  Int?

  BudgetMaterial BudgetMaterial[]

  user User @relation(fields: [userId], references: [id])
}

model Budget {
  id             Int              @id @default(autoincrement())
  clientId       Int
  client         Client           @relation(fields: [clientId], references: [id])
  materials      Material[]
  createdAt      DateTime         @default(now())
  finalized      Boolean          @default(false)
  BudgetMaterial BudgetMaterial[]
}

model BudgetMaterial {
  id              Int      @id @default(autoincrement())
  budgetId        Int
  materialId      Int
  budget          Budget   @relation(fields: [budgetId], references: [id])
  material        Material @relation(fields: [materialId], references: [id])
  quantity        Int
  priceAtCreation Float
}
